{"ast":null,"code":"import * as Cesium from 'cesium';\n\n/**\r\n * Cesium 辅助工具类\r\n * 提供坐标系转换、3D Tiles 优化等功能\r\n */\nclass CesiumHelper {\n  /**\r\n   * 初始化 Cesium 视图器\r\n   * @param {string|HTMLElement} container - 容器 ID 或 DOM 元素\r\n   * @param {Object} options - Cesium 配置选项\r\n   * @returns {Cesium.Viewer} Cesium 视图器实例\r\n   */\n  static initViewer(container, options = {}) {\n    // 默认配置\n    const defaultOptions = {\n      terrainProvider: Cesium.createWorldTerrain(),\n      imageryProvider: new Cesium.UrlTemplateImageryProvider({\n        url: 'https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png',\n        subdomains: ['a', 'b', 'c']\n      }),\n      baseLayerPicker: false,\n      fullscreenButton: false,\n      homeButton: false,\n      infoBox: false,\n      navigationHelpButton: false,\n      sceneModePicker: true,\n      animation: false,\n      timeline: false\n    };\n\n    // 合并配置\n    const mergedOptions = {\n      ...defaultOptions,\n      ...options\n    };\n\n    // 创建视图器\n    const viewer = new Cesium.Viewer(container, mergedOptions);\n\n    // 优化性能\n    this.optimizePerformance(viewer);\n    return viewer;\n  }\n\n  /**\r\n   * 优化 Cesium 性能\r\n   * @param {Cesium.Viewer} viewer - Cesium 视图器实例\r\n   */\n  static optimizePerformance(viewer) {\n    // 关闭不必要的渲染效果\n    viewer.scene.fog.enabled = false;\n    viewer.scene.globe.enableLighting = false;\n\n    // 设置视锥体剔除\n    viewer.scene.skipDepthTestAgainstTerrain = true;\n\n    // 优化内存管理\n    viewer.scene.requestRenderMode = true;\n    viewer.scene.maximumRenderTimeChange = Infinity;\n  }\n\n  /**\r\n   * 加载 3D Tiles 模型\r\n   * @param {Cesium.Viewer} viewer - Cesium 视图器实例\r\n   * @param {string} url - 3D Tiles 模型 URL\r\n   * @param {Object} options - 加载选项\r\n   * @returns {Promise<Cesium.Cesium3DTileset>} 加载的 3D Tiles 集\r\n   */\n  static async load3DTileset(viewer, url, options = {}) {\n    try {\n      const tileset = viewer.scene.primitives.add(new Cesium.Cesium3DTileset({\n        url,\n        ...options\n      }));\n\n      // 优化 3D Tiles 加载\n      this.optimize3DTileset(tileset);\n      await tileset.readyPromise;\n      return tileset;\n    } catch (error) {\n      console.error('加载 3D Tiles 失败:', error);\n      throw error;\n    }\n  }\n\n  /**\r\n   * 优化 3D Tiles 性能\r\n   * @param {Cesium.Cesium3DTileset} tileset - 3D Tiles 集\r\n   */\n  static optimize3DTileset(tileset) {\n    // 设置最大屏幕空间错误\n    tileset.maxScreenSpaceError = 16;\n\n    // 启用视锥体剔除\n    tileset.cullWithChildrenBounds = true;\n\n    // 设置最大内存使用\n    tileset.maximumMemoryUsage = 512;\n\n    // 优化渲染顺序\n    tileset.renderOrder = 0;\n  }\n\n  /**\r\n   * WGS84 坐标转笛卡尔坐标\r\n   * @param {number} lng - 经度\r\n   * @param {number} lat - 纬度\r\n   * @param {number} height - 高度\r\n   * @returns {Cesium.Cartesian3} 笛卡尔坐标\r\n   */\n  static wgs84ToCartesian(lng, lat, height = 0) {\n    return Cesium.Cartesian3.fromDegrees(lng, lat, height);\n  }\n\n  /**\r\n   * 笛卡尔坐标转 WGS84 坐标\r\n   * @param {Cesium.Cartesian3} cartesian - 笛卡尔坐标\r\n   * @returns {Object} WGS84 坐标 {lng, lat, height}\r\n   */\n  static cartesianToWgs84(cartesian) {\n    const cartographic = Cesium.Cartographic.fromCartesian(cartesian);\n    return {\n      lng: Cesium.Math.toDegrees(cartographic.longitude),\n      lat: Cesium.Math.toDegrees(cartographic.latitude),\n      height: cartographic.height\n    };\n  }\n\n  /**\r\n   * 屏幕坐标转世界坐标\r\n   * @param {Cesium.Viewer} viewer - Cesium 视图器实例\r\n   * @param {number} x - 屏幕 X 坐标\r\n   * @param {number} y - 屏幕 Y 坐标\r\n   * @returns {Object|null} 世界坐标 {lng, lat, height} 或 null（如果点击天空）\r\n   */\n  static screenToWorld(viewer, x, y) {\n    const ray = viewer.camera.getPickRay(new Cesium.Cartesian2(x, y));\n    const intersection = viewer.scene.globe.pick(ray, viewer.scene);\n    if (!intersection) return null;\n    return this.cartesianToWgs84(intersection);\n  }\n\n  /**\r\n   * 创建点标记\r\n   * @param {Cesium.Viewer} viewer - Cesium 视图器实例\r\n   * @param {number} lng - 经度\r\n   * @param {number} lat - 纬度\r\n   * @param {number} height - 高度\r\n   * @param {Object} options - 点标记选项\r\n   * @returns {Cesium.Entity} 点标记实体\r\n   */\n  static createPointMarker(viewer, lng, lat, height = 0, options = {}) {\n    const defaultOptions = {\n      position: this.wgs84ToCartesian(lng, lat, height),\n      point: {\n        pixelSize: 10,\n        color: Cesium.Color.RED,\n        outlineColor: Cesium.Color.WHITE,\n        outlineWidth: 2\n      }\n    };\n    const mergedOptions = {\n      ...defaultOptions,\n      ...options\n    };\n    return viewer.entities.add(mergedOptions);\n  }\n\n  /**\r\n   * 飞行动画到指定位置\r\n   * @param {Cesium.Viewer} viewer - Cesium 视图器实例\r\n   * @param {number} lng - 经度\r\n   * @param {number} lat - 纬度\r\n   * @param {number} height - 高度\r\n   * @param {number} duration - 动画持续时间（秒）\r\n   * @returns {Promise} 飞行完成的 Promise\r\n   */\n  static flyTo(viewer, lng, lat, height = 1000, duration = 3) {\n    return viewer.camera.flyTo({\n      destination: this.wgs84ToCartesian(lng, lat, height),\n      duration,\n      orientation: {\n        heading: Cesium.Math.toRadians(0),\n        pitch: Cesium.Math.toRadians(-45),\n        roll: 0\n      }\n    });\n  }\n}\nexport default CesiumHelper;","map":{"version":3,"names":["Cesium","CesiumHelper","initViewer","container","options","defaultOptions","terrainProvider","createWorldTerrain","imageryProvider","UrlTemplateImageryProvider","url","subdomains","baseLayerPicker","fullscreenButton","homeButton","infoBox","navigationHelpButton","sceneModePicker","animation","timeline","mergedOptions","viewer","Viewer","optimizePerformance","scene","fog","enabled","globe","enableLighting","skipDepthTestAgainstTerrain","requestRenderMode","maximumRenderTimeChange","Infinity","load3DTileset","tileset","primitives","add","Cesium3DTileset","optimize3DTileset","readyPromise","error","console","maxScreenSpaceError","cullWithChildrenBounds","maximumMemoryUsage","renderOrder","wgs84ToCartesian","lng","lat","height","Cartesian3","fromDegrees","cartesianToWgs84","cartesian","cartographic","Cartographic","fromCartesian","Math","toDegrees","longitude","latitude","screenToWorld","x","y","ray","camera","getPickRay","Cartesian2","intersection","pick","createPointMarker","position","point","pixelSize","color","Color","RED","outlineColor","WHITE","outlineWidth","entities","flyTo","duration","destination","orientation","heading","toRadians","pitch","roll"],"sources":["C:/Users/hrs28/.trae-cn/SicnuGeo/shared-city-version/src/utils/cesium.helper.js"],"sourcesContent":["import * as Cesium from 'cesium'\r\n\r\n/**\r\n * Cesium 辅助工具类\r\n * 提供坐标系转换、3D Tiles 优化等功能\r\n */\r\nclass CesiumHelper {\r\n  /**\r\n   * 初始化 Cesium 视图器\r\n   * @param {string|HTMLElement} container - 容器 ID 或 DOM 元素\r\n   * @param {Object} options - Cesium 配置选项\r\n   * @returns {Cesium.Viewer} Cesium 视图器实例\r\n   */\r\n  static initViewer(container, options = {}) {\r\n    // 默认配置\r\n    const defaultOptions = {\r\n      terrainProvider: Cesium.createWorldTerrain(),\r\n      imageryProvider: new Cesium.UrlTemplateImageryProvider({\r\n        url: 'https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png',\r\n        subdomains: ['a', 'b', 'c']\r\n      }),\r\n      baseLayerPicker: false,\r\n      fullscreenButton: false,\r\n      homeButton: false,\r\n      infoBox: false,\r\n      navigationHelpButton: false,\r\n      sceneModePicker: true,\r\n      animation: false,\r\n      timeline: false\r\n    }\r\n\r\n    // 合并配置\r\n    const mergedOptions = { ...defaultOptions, ...options }\r\n\r\n    // 创建视图器\r\n    const viewer = new Cesium.Viewer(container, mergedOptions)\r\n\r\n    // 优化性能\r\n    this.optimizePerformance(viewer)\r\n\r\n    return viewer\r\n  }\r\n\r\n  /**\r\n   * 优化 Cesium 性能\r\n   * @param {Cesium.Viewer} viewer - Cesium 视图器实例\r\n   */\r\n  static optimizePerformance(viewer) {\r\n    // 关闭不必要的渲染效果\r\n    viewer.scene.fog.enabled = false\r\n    viewer.scene.globe.enableLighting = false\r\n\r\n    // 设置视锥体剔除\r\n    viewer.scene.skipDepthTestAgainstTerrain = true\r\n\r\n    // 优化内存管理\r\n    viewer.scene.requestRenderMode = true\r\n    viewer.scene.maximumRenderTimeChange = Infinity\r\n  }\r\n\r\n  /**\r\n   * 加载 3D Tiles 模型\r\n   * @param {Cesium.Viewer} viewer - Cesium 视图器实例\r\n   * @param {string} url - 3D Tiles 模型 URL\r\n   * @param {Object} options - 加载选项\r\n   * @returns {Promise<Cesium.Cesium3DTileset>} 加载的 3D Tiles 集\r\n   */\r\n  static async load3DTileset(viewer, url, options = {}) {\r\n    try {\r\n      const tileset = viewer.scene.primitives.add(\r\n        new Cesium.Cesium3DTileset({\r\n          url,\r\n          ...options\r\n        })\r\n      )\r\n\r\n      // 优化 3D Tiles 加载\r\n      this.optimize3DTileset(tileset)\r\n\r\n      await tileset.readyPromise\r\n      return tileset\r\n    } catch (error) {\r\n      console.error('加载 3D Tiles 失败:', error)\r\n      throw error\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 优化 3D Tiles 性能\r\n   * @param {Cesium.Cesium3DTileset} tileset - 3D Tiles 集\r\n   */\r\n  static optimize3DTileset(tileset) {\r\n    // 设置最大屏幕空间错误\r\n    tileset.maxScreenSpaceError = 16\r\n\r\n    // 启用视锥体剔除\r\n    tileset.cullWithChildrenBounds = true\r\n\r\n    // 设置最大内存使用\r\n    tileset.maximumMemoryUsage = 512\r\n\r\n    // 优化渲染顺序\r\n    tileset.renderOrder = 0\r\n  }\r\n\r\n  /**\r\n   * WGS84 坐标转笛卡尔坐标\r\n   * @param {number} lng - 经度\r\n   * @param {number} lat - 纬度\r\n   * @param {number} height - 高度\r\n   * @returns {Cesium.Cartesian3} 笛卡尔坐标\r\n   */\r\n  static wgs84ToCartesian(lng, lat, height = 0) {\r\n    return Cesium.Cartesian3.fromDegrees(lng, lat, height)\r\n  }\r\n\r\n  /**\r\n   * 笛卡尔坐标转 WGS84 坐标\r\n   * @param {Cesium.Cartesian3} cartesian - 笛卡尔坐标\r\n   * @returns {Object} WGS84 坐标 {lng, lat, height}\r\n   */\r\n  static cartesianToWgs84(cartesian) {\r\n    const cartographic = Cesium.Cartographic.fromCartesian(cartesian)\r\n    return {\r\n      lng: Cesium.Math.toDegrees(cartographic.longitude),\r\n      lat: Cesium.Math.toDegrees(cartographic.latitude),\r\n      height: cartographic.height\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 屏幕坐标转世界坐标\r\n   * @param {Cesium.Viewer} viewer - Cesium 视图器实例\r\n   * @param {number} x - 屏幕 X 坐标\r\n   * @param {number} y - 屏幕 Y 坐标\r\n   * @returns {Object|null} 世界坐标 {lng, lat, height} 或 null（如果点击天空）\r\n   */\r\n  static screenToWorld(viewer, x, y) {\r\n    const ray = viewer.camera.getPickRay(new Cesium.Cartesian2(x, y))\r\n    const intersection = viewer.scene.globe.pick(ray, viewer.scene)\r\n\r\n    if (!intersection) return null\r\n\r\n    return this.cartesianToWgs84(intersection)\r\n  }\r\n\r\n  /**\r\n   * 创建点标记\r\n   * @param {Cesium.Viewer} viewer - Cesium 视图器实例\r\n   * @param {number} lng - 经度\r\n   * @param {number} lat - 纬度\r\n   * @param {number} height - 高度\r\n   * @param {Object} options - 点标记选项\r\n   * @returns {Cesium.Entity} 点标记实体\r\n   */\r\n  static createPointMarker(viewer, lng, lat, height = 0, options = {}) {\r\n    const defaultOptions = {\r\n      position: this.wgs84ToCartesian(lng, lat, height),\r\n      point: {\r\n        pixelSize: 10,\r\n        color: Cesium.Color.RED,\r\n        outlineColor: Cesium.Color.WHITE,\r\n        outlineWidth: 2\r\n      }\r\n    }\r\n\r\n    const mergedOptions = { ...defaultOptions, ...options }\r\n    return viewer.entities.add(mergedOptions)\r\n  }\r\n\r\n  /**\r\n   * 飞行动画到指定位置\r\n   * @param {Cesium.Viewer} viewer - Cesium 视图器实例\r\n   * @param {number} lng - 经度\r\n   * @param {number} lat - 纬度\r\n   * @param {number} height - 高度\r\n   * @param {number} duration - 动画持续时间（秒）\r\n   * @returns {Promise} 飞行完成的 Promise\r\n   */\r\n  static flyTo(viewer, lng, lat, height = 1000, duration = 3) {\r\n    return viewer.camera.flyTo({\r\n      destination: this.wgs84ToCartesian(lng, lat, height),\r\n      duration,\r\n      orientation: {\r\n        heading: Cesium.Math.toRadians(0),\r\n        pitch: Cesium.Math.toRadians(-45),\r\n        roll: 0\r\n      }\r\n    })\r\n  }\r\n}\r\n\r\nexport default CesiumHelper"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}