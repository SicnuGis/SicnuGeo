{"ast":null,"code":"import { projectService } from '@/services/project.service';\nexport default {\n  data() {\n    return {\n      projects: [],\n      showAddDialog: false,\n      isEditing: false,\n      formData: {\n        id: '',\n        name: '',\n        description: '',\n        startDate: '',\n        endDate: '',\n        status: 'notStarted'\n      }\n    };\n  },\n  mounted() {\n    this.loadProjects();\n  },\n  methods: {\n    async loadProjects() {\n      try {\n        const data = await projectService.getAllProjects();\n        this.projects = data;\n        // 更新Vuex store\n        this.$store.dispatch('setProjects', data);\n      } catch (error) {\n        console.error('加载项目列表失败:', error);\n        this.$message.error('加载项目列表失败');\n      }\n    },\n    viewProject(id) {\n      this.$router.push({\n        name: 'projectDetail',\n        params: {\n          id\n        }\n      });\n    },\n    editProject(project) {\n      this.isEditing = true;\n      this.formData = {\n        ...project\n      };\n      this.showAddDialog = true;\n    },\n    async deleteProject(id) {\n      try {\n        await projectService.deleteProject(id);\n        // 更新本地数据\n        this.projects = this.projects.filter(project => project.id !== id);\n        // 更新Vuex store\n        this.$store.dispatch('deleteProjectById', id);\n        this.$message.success('项目删除成功');\n      } catch (error) {\n        console.error('删除项目失败:', error);\n        this.$message.error('删除项目失败');\n      }\n    },\n    async submitForm() {\n      try {\n        await this.$refs.formRef.validate();\n        if (this.isEditing) {\n          // 编辑项目\n          await projectService.updateProject(this.formData.id, this.formData);\n          // 更新本地数据\n          const index = this.projects.findIndex(project => project.id === this.formData.id);\n          if (index !== -1) {\n            this.projects[index] = {\n              ...this.formData\n            };\n          }\n          // 更新Vuex store\n          this.$store.dispatch('updateProjectById', {\n            id: this.formData.id,\n            updatedData: this.formData\n          });\n          this.$message.success('项目更新成功');\n        } else {\n          // 添加项目\n          const newProject = await projectService.createProject(this.formData);\n          // 更新本地数据\n          this.projects.push(newProject);\n          // 更新Vuex store\n          this.$store.dispatch('addProject', newProject);\n          this.$message.success('项目添加成功');\n        }\n\n        // 关闭对话框\n        this.showAddDialog = false;\n        // 重置表单\n        this.resetForm();\n      } catch (error) {\n        console.error('提交表单失败:', error);\n        if (error.name === 'ValidationError') {\n          return;\n        }\n        this.$message.error('操作失败，请重试');\n      }\n    },\n    resetForm() {\n      this.$refs.formRef.resetFields();\n      this.formData = {\n        id: '',\n        name: '',\n        description: '',\n        startDate: '',\n        endDate: '',\n        status: 'notStarted'\n      };\n      this.isEditing = false;\n    }\n  }\n};","map":{"version":3,"names":["projectService","data","projects","showAddDialog","isEditing","formData","id","name","description","startDate","endDate","status","mounted","loadProjects","methods","getAllProjects","$store","dispatch","error","console","$message","viewProject","$router","push","params","editProject","project","deleteProject","filter","success","submitForm","$refs","formRef","validate","updateProject","index","findIndex","updatedData","newProject","createProject","resetForm","resetFields"],"sources":["src/components/ProjectAdmin.vue"],"sourcesContent":["<template>\r\n  <div class=\"project-admin-container\">\r\n    <div class=\"header\">\r\n      <h2>项目管理</h2>\r\n      <button class=\"add-btn\" @click=\"showAddDialog = true\">添加项目</button>\r\n    </div>\r\n\r\n    <!-- 项目列表 -->\r\n    <div class=\"project-list\">\r\n      <el-table :data=\"projects\" style=\"width: 100%\">\r\n        <el-table-column prop=\"id\" label=\"项目ID\" width=\"80\"></el-table-column>\r\n        <el-table-column prop=\"name\" label=\"项目名称\" width=\"200\"></el-table-column>\r\n        <el-table-column prop=\"description\" label=\"项目描述\"></el-table-column>\r\n        <el-table-column prop=\"startDate\" label=\"开始日期\" width=\"120\"></el-table-column>\r\n        <el-table-column prop=\"endDate\" label=\"结束日期\" width=\"120\"></el-table-column>\r\n        <el-table-column prop=\"status\" label=\"状态\" width=\"100\"></el-table-column>\r\n        <el-table-column label=\"操作\" width=\"180\" fixed=\"right\">\r\n          <template #default=\"scope\">\r\n            <el-button size=\"small\" @click=\"viewProject(scope.row.id)\">查看</el-button>\r\n            <el-button size=\"small\" type=\"primary\" @click=\"editProject(scope.row)\">编辑</el-button>\r\n            <el-button size=\"small\" type=\"danger\" @click=\"deleteProject(scope.row.id)\">删除</el-button>\r\n          </template>\r\n        </el-table-column>\r\n      </el-table>\r\n    </div>\r\n\r\n    <!-- 添加/编辑项目对话框 -->\r\n    <el-dialog v-model=\"showAddDialog\" :title=\"isEditing ? '编辑项目' : '添加项目'\" width=\"500px\">\r\n      <el-form :model=\"formData\" ref=\"formRef\" label-width=\"100px\">\r\n        <el-form-item label=\"项目名称\" prop=\"name\" :rules=\"[{ required: true, message: '请输入项目名称' }]\">\r\n          <el-input v-model=\"formData.name\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item label=\"项目描述\" prop=\"description\">\r\n          <el-input v-model=\"formData.description\" type=\"textarea\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item label=\"开始日期\" prop=\"startDate\" :rules=\"[{ required: true, message: '请选择开始日期' }]\">\r\n          <el-date-picker v-model=\"formData.startDate\" type=\"date\"></el-date-picker>\r\n        </el-form-item>\r\n        <el-form-item label=\"结束日期\" prop=\"endDate\" :rules=\"[{ required: true, message: '请选择结束日期' }]\">\r\n          <el-date-picker v-model=\"formData.endDate\" type=\"date\"></el-date-picker>\r\n        </el-form-item>\r\n        <el-form-item label=\"项目状态\" prop=\"status\">\r\n          <el-select v-model=\"formData.status\">\r\n            <el-option label=\"未开始\" value=\"notStarted\"></el-option>\r\n            <el-option label=\"进行中\" value=\"inProgress\"></el-option>\r\n            <el-option label=\"已完成\" value=\"completed\"></el-option>\r\n            <el-option label=\"已延期\" value=\"delayed\"></el-option>\r\n          </el-select>\r\n        </el-form-item>\r\n      </el-form>\r\n      <template #footer>\r\n        <el-button @click=\"showAddDialog = false\">取消</el-button>\r\n        <el-button type=\"primary\" @click=\"submitForm\">确认</el-button>\r\n      </template>\r\n    </el-dialog>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { projectService } from '@/services/project.service'\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      projects: [],\r\n      showAddDialog: false,\r\n      isEditing: false,\r\n      formData: {\r\n        id: '',\r\n        name: '',\r\n        description: '',\r\n        startDate: '',\r\n        endDate: '',\r\n        status: 'notStarted'\r\n      }\r\n    }\r\n  },\r\n  mounted() {\r\n    this.loadProjects()\r\n  },\r\n  methods: {\r\n    async loadProjects() {\r\n      try {\r\n        const data = await projectService.getAllProjects()\r\n        this.projects = data\r\n        // 更新Vuex store\r\n        this.$store.dispatch('setProjects', data)\r\n      } catch (error) {\r\n        console.error('加载项目列表失败:', error)\r\n        this.$message.error('加载项目列表失败')\r\n      }\r\n    },\r\n    viewProject(id) {\r\n      this.$router.push({ name: 'projectDetail', params: { id } })\r\n    },\r\n    editProject(project) {\r\n      this.isEditing = true\r\n      this.formData = { ...project }\r\n      this.showAddDialog = true\r\n    },\r\n    async deleteProject(id) {\r\n      try {\r\n        await projectService.deleteProject(id)\r\n        // 更新本地数据\r\n        this.projects = this.projects.filter(project => project.id !== id)\r\n        // 更新Vuex store\r\n        this.$store.dispatch('deleteProjectById', id)\r\n        this.$message.success('项目删除成功')\r\n      } catch (error) {\r\n        console.error('删除项目失败:', error)\r\n        this.$message.error('删除项目失败')\r\n      }\r\n    },\r\n    async submitForm() {\r\n      try {\r\n        await this.$refs.formRef.validate()\r\n\r\n        if (this.isEditing) {\r\n          // 编辑项目\r\n          await projectService.updateProject(this.formData.id, this.formData)\r\n          // 更新本地数据\r\n          const index = this.projects.findIndex(project => project.id === this.formData.id)\r\n          if (index !== -1) {\r\n            this.projects[index] = { ...this.formData }\r\n          }\r\n          // 更新Vuex store\r\n          this.$store.dispatch('updateProjectById', {\r\n            id: this.formData.id,\r\n            updatedData: this.formData\r\n          })\r\n          this.$message.success('项目更新成功')\r\n        } else {\r\n          // 添加项目\r\n          const newProject = await projectService.createProject(this.formData)\r\n          // 更新本地数据\r\n          this.projects.push(newProject)\r\n          // 更新Vuex store\r\n          this.$store.dispatch('addProject', newProject)\r\n          this.$message.success('项目添加成功')\r\n        }\r\n\r\n        // 关闭对话框\r\n        this.showAddDialog = false\r\n        // 重置表单\r\n        this.resetForm()\r\n      } catch (error) {\r\n        console.error('提交表单失败:', error)\r\n        if (error.name === 'ValidationError') {\r\n          return\r\n        }\r\n        this.$message.error('操作失败，请重试')\r\n      }\r\n    },\r\n    resetForm() {\r\n      this.$refs.formRef.resetFields()\r\n      this.formData = {\r\n        id: '',\r\n        name: '',\r\n        description: '',\r\n        startDate: '',\r\n        endDate: '',\r\n        status: 'notStarted'\r\n      }\r\n      this.isEditing = false\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.project-admin-container {\r\n  padding: 20px;\r\n}\r\n\r\n.header {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.add-btn {\r\n  padding: 8px 16px;\r\n  background-color: #4096ff;\r\n  color: white;\r\n  border: none;\r\n  border-radius: 4px;\r\n  cursor: pointer;\r\n}\r\n\r\n.project-list {\r\n  background-color: white;\r\n  border-radius: 8px;\r\n  box-shadow: 0 2px 12px 0 rgba(0, 0, 0, 0.1);\r\n  padding: 20px;\r\n}\r\n</style>"],"mappings":"AA2DA,SAAAA,cAAA;AAEA;EACAC,KAAA;IACA;MACAC,QAAA;MACAC,aAAA;MACAC,SAAA;MACAC,QAAA;QACAC,EAAA;QACAC,IAAA;QACAC,WAAA;QACAC,SAAA;QACAC,OAAA;QACAC,MAAA;MACA;IACA;EACA;EACAC,QAAA;IACA,KAAAC,YAAA;EACA;EACAC,OAAA;IACA,MAAAD,aAAA;MACA;QACA,MAAAZ,IAAA,SAAAD,cAAA,CAAAe,cAAA;QACA,KAAAb,QAAA,GAAAD,IAAA;QACA;QACA,KAAAe,MAAA,CAAAC,QAAA,gBAAAhB,IAAA;MACA,SAAAiB,KAAA;QACAC,OAAA,CAAAD,KAAA,cAAAA,KAAA;QACA,KAAAE,QAAA,CAAAF,KAAA;MACA;IACA;IACAG,YAAAf,EAAA;MACA,KAAAgB,OAAA,CAAAC,IAAA;QAAAhB,IAAA;QAAAiB,MAAA;UAAAlB;QAAA;MAAA;IACA;IACAmB,YAAAC,OAAA;MACA,KAAAtB,SAAA;MACA,KAAAC,QAAA;QAAA,GAAAqB;MAAA;MACA,KAAAvB,aAAA;IACA;IACA,MAAAwB,cAAArB,EAAA;MACA;QACA,MAAAN,cAAA,CAAA2B,aAAA,CAAArB,EAAA;QACA;QACA,KAAAJ,QAAA,QAAAA,QAAA,CAAA0B,MAAA,CAAAF,OAAA,IAAAA,OAAA,CAAApB,EAAA,KAAAA,EAAA;QACA;QACA,KAAAU,MAAA,CAAAC,QAAA,sBAAAX,EAAA;QACA,KAAAc,QAAA,CAAAS,OAAA;MACA,SAAAX,KAAA;QACAC,OAAA,CAAAD,KAAA,YAAAA,KAAA;QACA,KAAAE,QAAA,CAAAF,KAAA;MACA;IACA;IACA,MAAAY,WAAA;MACA;QACA,WAAAC,KAAA,CAAAC,OAAA,CAAAC,QAAA;QAEA,SAAA7B,SAAA;UACA;UACA,MAAAJ,cAAA,CAAAkC,aAAA,MAAA7B,QAAA,CAAAC,EAAA,OAAAD,QAAA;UACA;UACA,MAAA8B,KAAA,QAAAjC,QAAA,CAAAkC,SAAA,CAAAV,OAAA,IAAAA,OAAA,CAAApB,EAAA,UAAAD,QAAA,CAAAC,EAAA;UACA,IAAA6B,KAAA;YACA,KAAAjC,QAAA,CAAAiC,KAAA;cAAA,QAAA9B;YAAA;UACA;UACA;UACA,KAAAW,MAAA,CAAAC,QAAA;YACAX,EAAA,OAAAD,QAAA,CAAAC,EAAA;YACA+B,WAAA,OAAAhC;UACA;UACA,KAAAe,QAAA,CAAAS,OAAA;QACA;UACA;UACA,MAAAS,UAAA,SAAAtC,cAAA,CAAAuC,aAAA,MAAAlC,QAAA;UACA;UACA,KAAAH,QAAA,CAAAqB,IAAA,CAAAe,UAAA;UACA;UACA,KAAAtB,MAAA,CAAAC,QAAA,eAAAqB,UAAA;UACA,KAAAlB,QAAA,CAAAS,OAAA;QACA;;QAEA;QACA,KAAA1B,aAAA;QACA;QACA,KAAAqC,SAAA;MACA,SAAAtB,KAAA;QACAC,OAAA,CAAAD,KAAA,YAAAA,KAAA;QACA,IAAAA,KAAA,CAAAX,IAAA;UACA;QACA;QACA,KAAAa,QAAA,CAAAF,KAAA;MACA;IACA;IACAsB,UAAA;MACA,KAAAT,KAAA,CAAAC,OAAA,CAAAS,WAAA;MACA,KAAApC,QAAA;QACAC,EAAA;QACAC,IAAA;QACAC,WAAA;QACAC,SAAA;QACAC,OAAA;QACAC,MAAA;MACA;MACA,KAAAP,SAAA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}