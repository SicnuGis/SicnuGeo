{"ast":null,"code":"import { projectService } from '@/services/project.service';\nimport { useProjectStore } from '@/store/index';\nexport default {\n  data() {\n    return {\n      projects: []\n    };\n  },\n  created() {\n    // 初始化Pinia store实例\n    this.projectStore = useProjectStore();\n  },\n  computed: {\n    recentProjects() {\n      const allProjects = this.projectStore.getAllProjects;\n      // 按创建时间降序排序，取前3个\n      return [...allProjects].sort((a, b) => {\n        return new Date(b.createdAt || b.startDate) - new Date(a.createdAt || a.startDate);\n      }).slice(0, 3);\n    }\n  },\n  mounted() {\n    this.loadProjects();\n  },\n  methods: {\n    async loadProjects() {\n      try {\n        const data = await projectService.getAllProjects();\n        this.projects = data;\n        // 更新Pinia store\n        this.projectStore.setProjects(data);\n      } catch (error) {\n        console.error('加载项目列表失败:', error);\n      }\n    },\n    goToProjectAdmin() {\n      this.$router.push('/projects');\n    },\n    viewProject(id) {\n      this.$router.push({\n        name: 'ProjectDetail',\n        params: {\n          id\n        }\n      });\n    },\n    formatDate(dateString) {\n      if (!dateString) return '暂无';\n      const date = new Date(dateString);\n      return `${date.getFullYear()}-${(date.getMonth() + 1).toString().padStart(2, '0')}-${date.getDate().toString().padStart(2, '0')}`;\n    },\n    getStatusText(status) {\n      const statusMap = {\n        notStarted: '未开始',\n        inProgress: '进行中',\n        completed: '已完成',\n        delayed: '已延期'\n      };\n      return statusMap[status] || '未知状态';\n    }\n  }\n};","map":{"version":3,"names":["projectService","useProjectStore","data","projects","created","projectStore","computed","recentProjects","allProjects","getAllProjects","sort","a","b","Date","createdAt","startDate","slice","mounted","loadProjects","methods","setProjects","error","console","goToProjectAdmin","$router","push","viewProject","id","name","params","formatDate","dateString","date","getFullYear","getMonth","toString","padStart","getDate","getStatusText","status","statusMap","notStarted","inProgress","completed","delayed"],"sources":["src/views/Home.vue"],"sourcesContent":["<template>\r\n  <div class=\"home-container\">\r\n    <div class=\"hero\">\r\n      <h1>共享城市版本应用</h1>\r\n      <p>智能城市项目管理与可视化平台</p>\r\n      <button class=\"btn-primary\" @click=\"goToProjectAdmin\">进入项目管理</button>\r\n    </div>\r\n\r\n    <div class=\"features\">\r\n      <div class=\"feature-item\">\r\n        <div class=\"feature-icon\">📊</div>\r\n        <h3>项目甘特图</h3>\r\n        <p>直观展示项目进度和时间线，帮助您更好地管理项目</p>\r\n      </div>\r\n      <div class=\"feature-item\">\r\n        <div class=\"feature-icon\">🗺️</div>\r\n        <h3>GIS可视化</h3>\r\n        <p>结合Cesium实现地理信息可视化，直观展示城市项目分布</p>\r\n      </div>\r\n      <div class=\"feature-item\">\r\n        <div class=\"feature-icon\">🔔</div>\r\n        <h3>项目订阅</h3>\r\n        <p>订阅您关注的项目，及时获取项目最新进展和变更通知</p>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"recent-projects\" v-if=\"projects.length > 0\">\r\n      <h2>最近项目</h2>\r\n      <el-carousel :interval=\"5000\" arrow=\"always\">\r\n        <el-carousel-item v-for=\"project in projects\" :key=\"project.id\">\r\n          <div class=\"project-card\">\r\n            <h3>{{ project.name }}</h3>\r\n            <p>{{ project.description }}</p>\r\n            <div class=\"project-meta\">\r\n              <span>开始日期: {{ formatDate(project.startDate) }}</span>\r\n              <span>结束日期: {{ formatDate(project.endDate) }}</span>\r\n              <span :class=\"{ 'status-delayed': project.status === 'delayed' }\">\r\n                {{ getStatusText(project.status) }}\r\n              </span>\r\n            </div>\r\n            <button @click=\"viewProject(project.id)\">查看详情</button>\r\n          </div>\r\n        </el-carousel-item>\r\n      </el-carousel>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { projectService } from '@/services/project.service'\r\nimport { useProjectStore } from '@/store/index'\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      projects: []\r\n    }\r\n  },\r\n  created() {\r\n    // 初始化Pinia store实例\r\n    this.projectStore = useProjectStore()\r\n  },\r\n  computed: {\r\n    recentProjects() {\r\n      const allProjects = this.projectStore.getAllProjects\r\n      // 按创建时间降序排序，取前3个\r\n      return [...allProjects].sort((a, b) => {\r\n        return new Date(b.createdAt || b.startDate) - new Date(a.createdAt || a.startDate)\r\n      }).slice(0, 3)\r\n    }\r\n  },\r\n  mounted() {\r\n    this.loadProjects()\r\n  },\r\n  methods: {\r\n    async loadProjects() {\r\n      try {\r\n        const data = await projectService.getAllProjects()\r\n        this.projects = data\r\n        // 更新Pinia store\r\n        this.projectStore.setProjects(data)\r\n      } catch (error) {\r\n        console.error('加载项目列表失败:', error)\r\n      }\r\n    },\r\n    goToProjectAdmin() {\r\n      this.$router.push('/projects')\r\n    },\r\n    viewProject(id) {\r\n      this.$router.push({ name: 'ProjectDetail', params: { id } })\r\n    },\r\n    formatDate(dateString) {\r\n      if (!dateString) return '暂无'\r\n      const date = new Date(dateString)\r\n      return `${date.getFullYear()}-${(date.getMonth() + 1).toString().padStart(2, '0')}-${date.getDate().toString().padStart(2, '0')}`\r\n    },\r\n    getStatusText(status) {\r\n      const statusMap = {\r\n        notStarted: '未开始',\r\n        inProgress: '进行中',\r\n        completed: '已完成',\r\n        delayed: '已延期'\r\n      }\r\n      return statusMap[status] || '未知状态'\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.home-container {\r\n  padding: 0 20px;\r\n}\r\n\r\n.hero {\r\n  text-align: center;\r\n  padding: 60px 20px;\r\n  background-color: #f0f7ff;\r\n  border-radius: 8px;\r\n  margin-bottom: 40px;\r\n}\r\n\r\n.hero h1 {\r\n  font-size: 2.5rem;\r\n  margin-bottom: 10px;\r\n  color: #333;\r\n}\r\n\r\n.hero p {\r\n  font-size: 1.2rem;\r\n  color: #666;\r\n  margin-bottom: 30px;\r\n}\r\n\r\n.btn-primary {\r\n  padding: 12px 24px;\r\n  background-color: #4096ff;\r\n  color: white;\r\n  border: none;\r\n  border-radius: 4px;\r\n  font-size: 1rem;\r\n  cursor: pointer;\r\n  transition: background-color 0.3s;\r\n}\r\n\r\n.btn-primary:hover {\r\n  background-color: #3182ce;\r\n}\r\n\r\n.features {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  margin-bottom: 40px;\r\n}\r\n\r\n.feature-item {\r\n  flex: 1;\r\n  text-align: center;\r\n  padding: 20px;\r\n  margin: 0 10px;\r\n  background-color: white;\r\n  border-radius: 8px;\r\n  box-shadow: 0 2px 12px 0 rgba(0, 0, 0, 0.1);\r\n}\r\n\r\n.feature-icon {\r\n  font-size: 2.5rem;\r\n  margin-bottom: 15px;\r\n}\r\n\r\n.feature-item h3 {\r\n  font-size: 1.2rem;\r\n  margin-bottom: 10px;\r\n}\r\n\r\n.feature-item p {\r\n  color: #666;\r\n}\r\n\r\n.recent-projects {\r\n  margin-bottom: 40px;\r\n}\r\n\r\n.recent-projects h2 {\r\n  margin-bottom: 20px;\r\n  color: #333;\r\n}\r\n\r\n.project-card {\r\n  padding: 20px;\r\n  background-color: white;\r\n  border-radius: 8px;\r\n  box-shadow: 0 2px 12px 0 rgba(0, 0, 0, 0.1);\r\n  height: 100%;\r\n  display: flex;\r\n  flex-direction: column;\r\n}\r\n\r\n.project-card h3 {\r\n  margin-bottom: 10px;\r\n  color: #333;\r\n}\r\n\r\n.project-card p {\r\n  color: #666;\r\n  margin-bottom: 20px;\r\n  flex: 1;\r\n}\r\n\r\n.project-meta {\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 5px;\r\n  margin-bottom: 20px;\r\n  font-size: 0.9rem;\r\n}\r\n\r\n.status-delayed {\r\n  color: #ff4d4f;\r\n}\r\n\r\n.project-card button {\r\n  padding: 8px 16px;\r\n  background-color: #4096ff;\r\n  color: white;\r\n  border: none;\r\n  border-radius: 4px;\r\n  cursor: pointer;\r\n  align-self: flex-start;\r\n}\r\n\r\n@media (max-width: 768px) {\r\n  .features {\r\n    flex-direction: column;\r\n  }\r\n\r\n  .feature-item {\r\n    margin: 10px 0;\r\n  }\r\n}\r\n</style>"],"mappings":"AAiDA,SAAAA,cAAA;AACA,SAAAC,eAAA;AAEA;EACAC,KAAA;IACA;MACAC,QAAA;IACA;EACA;EACAC,QAAA;IACA;IACA,KAAAC,YAAA,GAAAJ,eAAA;EACA;EACAK,QAAA;IACAC,eAAA;MACA,MAAAC,WAAA,QAAAH,YAAA,CAAAI,cAAA;MACA;MACA,WAAAD,WAAA,EAAAE,IAAA,EAAAC,CAAA,EAAAC,CAAA;QACA,WAAAC,IAAA,CAAAD,CAAA,CAAAE,SAAA,IAAAF,CAAA,CAAAG,SAAA,QAAAF,IAAA,CAAAF,CAAA,CAAAG,SAAA,IAAAH,CAAA,CAAAI,SAAA;MACA,GAAAC,KAAA;IACA;EACA;EACAC,QAAA;IACA,KAAAC,YAAA;EACA;EACAC,OAAA;IACA,MAAAD,aAAA;MACA;QACA,MAAAhB,IAAA,SAAAF,cAAA,CAAAS,cAAA;QACA,KAAAN,QAAA,GAAAD,IAAA;QACA;QACA,KAAAG,YAAA,CAAAe,WAAA,CAAAlB,IAAA;MACA,SAAAmB,KAAA;QACAC,OAAA,CAAAD,KAAA,cAAAA,KAAA;MACA;IACA;IACAE,iBAAA;MACA,KAAAC,OAAA,CAAAC,IAAA;IACA;IACAC,YAAAC,EAAA;MACA,KAAAH,OAAA,CAAAC,IAAA;QAAAG,IAAA;QAAAC,MAAA;UAAAF;QAAA;MAAA;IACA;IACAG,WAAAC,UAAA;MACA,KAAAA,UAAA;MACA,MAAAC,IAAA,OAAAnB,IAAA,CAAAkB,UAAA;MACA,UAAAC,IAAA,CAAAC,WAAA,OAAAD,IAAA,CAAAE,QAAA,QAAAC,QAAA,GAAAC,QAAA,YAAAJ,IAAA,CAAAK,OAAA,GAAAF,QAAA,GAAAC,QAAA;IACA;IACAE,cAAAC,MAAA;MACA,MAAAC,SAAA;QACAC,UAAA;QACAC,UAAA;QACAC,SAAA;QACAC,OAAA;MACA;MACA,OAAAJ,SAAA,CAAAD,MAAA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}