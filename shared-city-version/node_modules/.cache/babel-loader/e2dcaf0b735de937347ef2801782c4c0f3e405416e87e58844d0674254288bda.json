{"ast":null,"code":"import Vue from 'vue';\nimport App from './APP.vue';\nimport router from './router';\nimport ElementUI from 'element-ui';\nimport 'element-ui/lib/theme-chalk/index.css';\n\n// 引入 Pinia\nimport { createPinia, PiniaVuePlugin } from 'pinia';\n\n// 安装 Pinia 插件\nVue.use(PiniaVuePlugin);\n\n// 创建 Pinia 实例\nconst pinia = createPinia();\n\n// 导入工具类\nimport * as CesiumHelper from './utils/cesium.helper';\nimport * as GeoUtils from './utils/geo.utils';\n\n// 全局注册ElementUI\nVue.use(ElementUI);\n\n// 将工具类挂载到Vue原型上\n//方便全局调用\nVue.prototype.$cesium = CesiumHelper;\nVue.prototype.$geo = GeoUtils;\nVue.config.productionTip = false;\n//创建vue根实例\nnew Vue({\n  router,\n  //注入路由\n  pinia,\n  //注入 Pinia 状态管理\n  render: h => h(App) //渲染根组件\n}).$mount('#app');\n\n// 添加全局错误处理\nVue.config.errorHandler = function (err, vm, info) {\n  console.error('全局错误:', err, info);\n  // 可以添加错误上报逻辑\n};\n\n// 监听未处理的 Promise 拒绝事件\ndocument.addEventListener('unhandledrejection', event => {\n  console.error('未处理的Promise拒绝:', event.reason);\n});","map":{"version":3,"names":["Vue","App","router","ElementUI","createPinia","PiniaVuePlugin","use","pinia","CesiumHelper","GeoUtils","prototype","$cesium","$geo","config","productionTip","render","h","$mount","errorHandler","err","vm","info","console","error","document","addEventListener","event","reason"],"sources":["C:/Users/hrs28/.trae-cn/SicnuGeo/shared-city-version/src/main.js"],"sourcesContent":["import Vue from 'vue'\r\nimport App from './APP.vue'\r\nimport router from './router'\r\nimport ElementUI from 'element-ui'\r\nimport 'element-ui/lib/theme-chalk/index.css'\r\n\r\n// 引入 Pinia\r\nimport { createPinia, PiniaVuePlugin } from 'pinia';\r\n\r\n// 安装 Pinia 插件\r\nVue.use(PiniaVuePlugin);\r\n\r\n// 创建 Pinia 实例\r\nconst pinia = createPinia();\r\n\r\n// 导入工具类\r\nimport * as CesiumHelper from './utils/cesium.helper'\r\nimport * as GeoUtils from './utils/geo.utils'\r\n\r\n// 全局注册ElementUI\r\nVue.use(ElementUI)\r\n\r\n// 将工具类挂载到Vue原型上\r\n//方便全局调用\r\nVue.prototype.$cesium = CesiumHelper\r\nVue.prototype.$geo = GeoUtils\r\n\r\nVue.config.productionTip = false\r\n//创建vue根实例\r\nnew Vue({\r\n  router,//注入路由\r\n  pinia,//注入 Pinia 状态管理\r\n  render: h => h(App)//渲染根组件\r\n}).$mount('#app')\r\n\r\n// 添加全局错误处理\r\nVue.config.errorHandler = function(err, vm, info) {\r\n  console.error('全局错误:', err, info)\r\n  // 可以添加错误上报逻辑\r\n}\r\n\r\n// 监听未处理的 Promise 拒绝事件\r\ndocument.addEventListener('unhandledrejection', (event) => {\r\n  console.error('未处理的Promise拒绝:', event.reason)\r\n})"],"mappings":"AAAA,OAAOA,GAAG,MAAM,KAAK;AACrB,OAAOC,GAAG,MAAM,WAAW;AAC3B,OAAOC,MAAM,MAAM,UAAU;AAC7B,OAAOC,SAAS,MAAM,YAAY;AAClC,OAAO,sCAAsC;;AAE7C;AACA,SAASC,WAAW,EAAEC,cAAc,QAAQ,OAAO;;AAEnD;AACAL,GAAG,CAACM,GAAG,CAACD,cAAc,CAAC;;AAEvB;AACA,MAAME,KAAK,GAAGH,WAAW,CAAC,CAAC;;AAE3B;AACA,OAAO,KAAKI,YAAY,MAAM,uBAAuB;AACrD,OAAO,KAAKC,QAAQ,MAAM,mBAAmB;;AAE7C;AACAT,GAAG,CAACM,GAAG,CAACH,SAAS,CAAC;;AAElB;AACA;AACAH,GAAG,CAACU,SAAS,CAACC,OAAO,GAAGH,YAAY;AACpCR,GAAG,CAACU,SAAS,CAACE,IAAI,GAAGH,QAAQ;AAE7BT,GAAG,CAACa,MAAM,CAACC,aAAa,GAAG,KAAK;AAChC;AACA,IAAId,GAAG,CAAC;EACNE,MAAM;EAAC;EACPK,KAAK;EAAC;EACNQ,MAAM,EAAEC,CAAC,IAAIA,CAAC,CAACf,GAAG,CAAC;AACrB,CAAC,CAAC,CAACgB,MAAM,CAAC,MAAM,CAAC;;AAEjB;AACAjB,GAAG,CAACa,MAAM,CAACK,YAAY,GAAG,UAASC,GAAG,EAAEC,EAAE,EAAEC,IAAI,EAAE;EAChDC,OAAO,CAACC,KAAK,CAAC,OAAO,EAAEJ,GAAG,EAAEE,IAAI,CAAC;EACjC;AACF,CAAC;;AAED;AACAG,QAAQ,CAACC,gBAAgB,CAAC,oBAAoB,EAAGC,KAAK,IAAK;EACzDJ,OAAO,CAACC,KAAK,CAAC,gBAAgB,EAAEG,KAAK,CAACC,MAAM,CAAC;AAC/C,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}