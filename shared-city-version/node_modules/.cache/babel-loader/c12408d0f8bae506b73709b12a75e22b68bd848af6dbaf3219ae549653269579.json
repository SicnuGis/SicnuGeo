{"ast":null,"code":"import { ref, onMounted, computed } from 'vue';\nimport { useRouter } from 'vue-router';\nimport { useStore } from 'vuex';\nimport { useProjectService } from '@/services/project.service';\nimport { ElMessage } from 'element-plus';\n\n// 状态\n\nexport default {\n  __name: 'ProjectAdmin',\n  setup(__props) {\n    const projects = ref([]);\n    const showAddDialog = ref(false);\n    const isEditing = ref(false);\n    const formRef = ref(null);\n    const formData = ref({\n      id: '',\n      name: '',\n      description: '',\n      startDate: '',\n      endDate: '',\n      status: 'notStarted'\n    });\n\n    // 路由、store和服务\n    const router = useRouter();\n    const store = useStore();\n    const projectService = useProjectService();\n\n    // 计算属性 - 获取项目列表\n    const projectList = computed(() => {\n      return store.getters.getAllProjects();\n    });\n\n    // 生命周期\n    onMounted(async () => {\n      await loadProjects();\n    });\n\n    // 加载项目列表\n    const loadProjects = async () => {\n      try {\n        const data = await projectService.getAllProjects();\n        projects.value = data;\n        // 更新Vuex store\n        store.dispatch('setProjects', data);\n      } catch (error) {\n        console.error('加载项目列表失败:', error);\n        ElMessage.error('加载项目列表失败');\n      }\n    };\n\n    // 查看项目\n    const viewProject = id => {\n      router.push({\n        name: 'projectDetail',\n        params: {\n          id\n        }\n      });\n    };\n\n    // 编辑项目\n    const editProject = project => {\n      isEditing = true;\n      formData.value = {\n        ...project\n      };\n      showAddDialog.value = true;\n    };\n\n    // 删除项目\n    const deleteProject = async id => {\n      try {\n        await projectService.deleteProject(id);\n        // 更新本地数据\n        projects.value = projects.value.filter(project => project.id !== id);\n        // 更新Vuex store\n        store.dispatch('deleteProjectById', id);\n        ElMessage.success('项目删除成功');\n      } catch (error) {\n        console.error('删除项目失败:', error);\n        ElMessage.error('删除项目失败');\n      }\n    };\n\n    // 提交表单\n    const submitForm = async () => {\n      try {\n        await formRef.value.validate();\n        if (isEditing) {\n          // 编辑项目\n          await projectService.updateProject(formData.value.id, formData.value);\n          // 更新本地数据\n          const index = projects.value.findIndex(project => project.id === formData.value.id);\n          if (index !== -1) {\n            projects.value[index] = {\n              ...formData.value\n            };\n          }\n          // 更新Vuex store\n          store.dispatch('updateProjectById', {\n            id: formData.value.id,\n            updatedData: formData.value\n          });\n          ElMessage.success('项目更新成功');\n        } else {\n          // 添加项目\n          const newProject = await projectService.createProject(formData.value);\n          // 更新本地数据\n          projects.value.push(newProject);\n          // 更新Vuex store\n          store.dispatch('addProject', newProject);\n          ElMessage.success('项目添加成功');\n        }\n\n        // 关闭对话框\n        showAddDialog.value = false;\n        // 重置表单\n        resetForm();\n      } catch (error) {\n        console.error('提交表单失败:', error);\n        if (error.name === 'ValidationError') {\n          return;\n        }\n        ElMessage.error('操作失败，请重试');\n      }\n    };\n\n    // 重置表单\n    const resetForm = () => {\n      formRef.value.resetFields();\n      formData.value = {\n        id: '',\n        name: '',\n        description: '',\n        startDate: '',\n        endDate: '',\n        status: 'notStarted'\n      };\n      isEditing = false;\n    };\n    return {\n      __sfc: true,\n      projects,\n      showAddDialog,\n      isEditing,\n      formRef,\n      formData,\n      router,\n      store,\n      projectService,\n      projectList,\n      loadProjects,\n      viewProject,\n      editProject,\n      deleteProject,\n      submitForm,\n      resetForm\n    };\n  }\n};","map":{"version":3,"names":["ref","onMounted","computed","useRouter","useStore","useProjectService","ElMessage","projects","showAddDialog","isEditing","formRef","formData","id","name","description","startDate","endDate","status","router","store","projectService","projectList","getters","getAllProjects","loadProjects","data","value","dispatch","error","console","viewProject","push","params","editProject","project","deleteProject","filter","success","submitForm","validate","updateProject","index","findIndex","updatedData","newProject","createProject","resetForm","resetFields"],"sources":["ProjectAdmin.vue"],"sourcesContent":["<template>\n  <div class=\"project-admin-container\">\n    <div class=\"header\">\n      <h2>项目管理</h2>\n      <button class=\"add-btn\" @click=\"showAddDialog = true\">添加项目</button>\n    </div>\n\n    <!-- 项目列表 -->\n    <div class=\"project-list\">\n      <el-table :data=\"projects\" style=\"width: 100%\">\n        <el-table-column prop=\"id\" label=\"项目ID\" width=\"80\"></el-table-column>\n        <el-table-column prop=\"name\" label=\"项目名称\" width=\"200\"></el-table-column>\n        <el-table-column prop=\"description\" label=\"项目描述\"></el-table-column>\n        <el-table-column prop=\"startDate\" label=\"开始日期\" width=\"120\"></el-table-column>\n        <el-table-column prop=\"endDate\" label=\"结束日期\" width=\"120\"></el-table-column>\n        <el-table-column prop=\"status\" label=\"状态\" width=\"100\"></el-table-column>\n        <el-table-column label=\"操作\" width=\"180\" fixed=\"right\">\n          <template #default=\"scope\">\n            <el-button size=\"small\" @click=\"viewProject(scope.row.id)\">查看</el-button>\n            <el-button size=\"small\" type=\"primary\" @click=\"editProject(scope.row)\">编辑</el-button>\n            <el-button size=\"small\" type=\"danger\" @click=\"deleteProject(scope.row.id)\">删除</el-button>\n          </template>\n        </el-table-column>\n      </el-table>\n    </div>\n\n    <!-- 添加/编辑项目对话框 -->\n    <el-dialog v-model=\"showAddDialog\" title=\"{{ isEditing ? '编辑项目' : '添加项目' }}\" width=\"500px\">\n      <el-form :model=\"formData\" ref=\"formRef\" label-width=\"100px\">\n        <el-form-item label=\"项目名称\" prop=\"name\" :rules=\"[{ required: true, message: '请输入项目名称' }]\">\n          <el-input v-model=\"formData.name\"></el-input>\n        </el-form-item>\n        <el-form-item label=\"项目描述\" prop=\"description\">\n          <el-input v-model=\"formData.description\" type=\"textarea\"></el-input>\n        </el-form-item>\n        <el-form-item label=\"开始日期\" prop=\"startDate\" :rules=\"[{ required: true, message: '请选择开始日期' }]\">\n          <el-date-picker v-model=\"formData.startDate\" type=\"date\"></el-date-picker>\n        </el-form-item>\n        <el-form-item label=\"结束日期\" prop=\"endDate\" :rules=\"[{ required: true, message: '请选择结束日期' }]\">\n          <el-date-picker v-model=\"formData.endDate\" type=\"date\"></el-date-picker>\n        </el-form-item>\n        <el-form-item label=\"项目状态\" prop=\"status\">\n          <el-select v-model=\"formData.status\">\n            <el-option label=\"未开始\" value=\"notStarted\"></el-option>\n            <el-option label=\"进行中\" value=\"inProgress\"></el-option>\n            <el-option label=\"已完成\" value=\"completed\"></el-option>\n            <el-option label=\"已延期\" value=\"delayed\"></el-option>\n          </el-select>\n        </el-form-item>\n      </el-form>\n      <template #footer>\n        <el-button @click=\"showAddDialog = false\">取消</el-button>\n        <el-button type=\"primary\" @click=\"submitForm\">确认</el-button>\n      </template>\n    </el-dialog>\n  </div>\n</template>\n\n<script setup>\nimport { ref, onMounted, computed } from 'vue'\nimport { useRouter } from 'vue-router'\nimport { useStore } from 'vuex'\nimport { useProjectService } from '@/services/project.service'\nimport { ElMessage } from 'element-plus'\n\n// 状态\nconst projects = ref([])\nconst showAddDialog = ref(false)\nconst isEditing = ref(false)\nconst formRef = ref(null)\nconst formData = ref({\n  id: '',\n  name: '',\n  description: '',\n  startDate: '',\n  endDate: '',\n  status: 'notStarted'\n})\n\n// 路由、store和服务\nconst router = useRouter()\nconst store = useStore()\nconst projectService = useProjectService()\n\n// 计算属性 - 获取项目列表\nconst projectList = computed(() => {\n  return store.getters.getAllProjects()\n})\n\n// 生命周期\nonMounted(async () => {\n  await loadProjects()\n})\n\n// 加载项目列表\nconst loadProjects = async () => {\n  try {\n    const data = await projectService.getAllProjects()\n    projects.value = data\n    // 更新Vuex store\n    store.dispatch('setProjects', data)\n  } catch (error) {\n    console.error('加载项目列表失败:', error)\n    ElMessage.error('加载项目列表失败')\n  }\n}\n\n// 查看项目\nconst viewProject = (id) => {\n  router.push({ name: 'projectDetail', params: { id } })\n}\n\n// 编辑项目\nconst editProject = (project) => {\n  isEditing = true\n  formData.value = { ...project }\n  showAddDialog.value = true\n}\n\n// 删除项目\nconst deleteProject = async (id) => {\n  try {\n    await projectService.deleteProject(id)\n    // 更新本地数据\n    projects.value = projects.value.filter(project => project.id !== id)\n    // 更新Vuex store\n    store.dispatch('deleteProjectById', id)\n    ElMessage.success('项目删除成功')\n  } catch (error) {\n    console.error('删除项目失败:', error)\n    ElMessage.error('删除项目失败')\n  }\n}\n\n// 提交表单\nconst submitForm = async () => {\n  try {\n    await formRef.value.validate()\n\n    if (isEditing) {\n      // 编辑项目\n      await projectService.updateProject(formData.value.id, formData.value)\n      // 更新本地数据\n      const index = projects.value.findIndex(project => project.id === formData.value.id)\n      if (index !== -1) {\n        projects.value[index] = { ...formData.value }\n      }\n      // 更新Vuex store\n      store.dispatch('updateProjectById', {\n        id: formData.value.id,\n        updatedData: formData.value\n      })\n      ElMessage.success('项目更新成功')\n    } else {\n      // 添加项目\n      const newProject = await projectService.createProject(formData.value)\n      // 更新本地数据\n      projects.value.push(newProject)\n      // 更新Vuex store\n      store.dispatch('addProject', newProject)\n      ElMessage.success('项目添加成功')\n    }\n\n    // 关闭对话框\n    showAddDialog.value = false\n    // 重置表单\n    resetForm()\n  } catch (error) {\n    console.error('提交表单失败:', error)\n    if (error.name === 'ValidationError') {\n      return\n    }\n    ElMessage.error('操作失败，请重试')\n  }\n}\n\n// 重置表单\nconst resetForm = () => {\n  formRef.value.resetFields()\n  formData.value = {\n    id: '',\n    name: '',\n    description: '',\n    startDate: '',\n    endDate: '',\n    status: 'notStarted'\n  }\n  isEditing = false\n}\n</script>\n\n<style scoped>\n.project-admin-container {\n  padding: 20px;\n}\n\n.header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 20px;\n}\n\n.add-btn {\n  padding: 8px 16px;\n  background-color: #4096ff;\n  color: white;\n  border: none;\n  border-radius: 4px;\n  cursor: pointer;\n}\n\n.project-list {\n  background-color: white;\n  border-radius: 8px;\n  box-shadow: 0 2px 12px 0 rgba(0, 0, 0, 0.1);\n  padding: 20px;\n}\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}