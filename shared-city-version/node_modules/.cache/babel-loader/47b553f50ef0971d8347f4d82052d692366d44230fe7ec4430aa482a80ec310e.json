{"ast":null,"code":"// 项目存储类，用于管理项目相关状态\nclass ProjectStore {\n  constructor() {\n    // 初始化项目数据\n    this.projects = [];\n    this.selectedProject = null;\n    this.subscribedProjects = [];\n  }\n\n  // 添加项目\n  addProject(project) {\n    this.projects.push(project);\n  }\n\n  // 批量设置项目\n  setProjects(projects) {\n    this.projects = projects;\n  }\n\n  // 根据 ID 获取项目\n  getProjectById(id) {\n    return this.projects.find(project => project.id === id);\n  }\n\n  // 获取所有项目\n  getAllProjects() {\n    return this.projects;\n  }\n\n  // 根据 ID 更新项目\n  updateProjectById(id, updatedData) {\n    const index = this.projects.findIndex(project => project.id === id);\n    if (index !== -1) {\n      this.projects[index] = {\n        ...this.projects[index],\n        ...updatedData\n      };\n      return true;\n    }\n    return false;\n  }\n\n  // 根据 ID 删除项目\n  deleteProjectById(id) {\n    this.projects = this.projects.filter(project => project.id !== id);\n    // 如果删除的是选中的项目，则清空选中项目\n    if (this.selectedProject && this.selectedProject.id === id) {\n      this.selectedProject = null;\n    }\n    // 从订阅列表中移除\n    this.subscribedProjects = this.subscribedProjects.filter(id => id !== id);\n  }\n\n  // 设置选中的项目\n  setSelectedProject(project) {\n    this.selectedProject = project;\n  }\n\n  // 获取选中的项目\n  getSelectedProject() {\n    return this.selectedProject;\n  }\n\n  // 订阅项目\n  subscribeProject(projectId) {\n    if (!this.subscribedProjects.includes(projectId)) {\n      this.subscribedProjects.push(projectId);\n    }\n  }\n\n  // 取消订阅项目\n  unsubscribeProject(projectId) {\n    this.subscribedProjects = this.subscribedProjects.filter(id => id !== projectId);\n  }\n\n  // 检查是否订阅了项目\n  isSubscribed(projectId) {\n    return this.subscribedProjects.includes(projectId);\n  }\n\n  // 获取订阅的项目列表\n  getSubscribedProjects() {\n    return this.projects.filter(project => this.subscribedProjects.includes(project.id));\n  }\n}\n\n// 导出 ProjectStore 类\nexport default ProjectStore;","map":{"version":3,"names":["ProjectStore","constructor","projects","selectedProject","subscribedProjects","addProject","project","push","setProjects","getProjectById","id","find","getAllProjects","updateProjectById","updatedData","index","findIndex","deleteProjectById","filter","setSelectedProject","getSelectedProject","subscribeProject","projectId","includes","unsubscribeProject","isSubscribed","getSubscribedProjects"],"sources":["C:/Users/hrs28/.trae-cn/SicnuGeo/shared-city-version/src/store/project.store.js"],"sourcesContent":["// 项目存储类，用于管理项目相关状态\nclass ProjectStore {\n    constructor() {\n        // 初始化项目数据\n        this.projects = [];\n        this.selectedProject = null;\n        this.subscribedProjects = [];\n    }\n\n    // 添加项目\n    addProject(project) {\n        this.projects.push(project);\n    }\n\n    // 批量设置项目\n    setProjects(projects) {\n        this.projects = projects;\n    }\n\n    // 根据 ID 获取项目\n    getProjectById(id) {\n        return this.projects.find(project => project.id === id);\n    }\n\n    // 获取所有项目\n    getAllProjects() {\n        return this.projects;\n    }\n\n    // 根据 ID 更新项目\n    updateProjectById(id, updatedData) {\n        const index = this.projects.findIndex(project => project.id === id);\n        if (index !== -1) {\n            this.projects[index] = { ...this.projects[index], ...updatedData };\n            return true;\n        }\n        return false;\n    }\n\n    // 根据 ID 删除项目\n    deleteProjectById(id) {\n        this.projects = this.projects.filter(project => project.id !== id);\n        // 如果删除的是选中的项目，则清空选中项目\n        if (this.selectedProject && this.selectedProject.id === id) {\n            this.selectedProject = null;\n        }\n        // 从订阅列表中移除\n        this.subscribedProjects = this.subscribedProjects.filter(id => id !== id);\n    }\n\n    // 设置选中的项目\n    setSelectedProject(project) {\n        this.selectedProject = project;\n    }\n\n    // 获取选中的项目\n    getSelectedProject() {\n        return this.selectedProject;\n    }\n\n    // 订阅项目\n    subscribeProject(projectId) {\n        if (!this.subscribedProjects.includes(projectId)) {\n            this.subscribedProjects.push(projectId);\n        }\n    }\n\n    // 取消订阅项目\n    unsubscribeProject(projectId) {\n        this.subscribedProjects = this.subscribedProjects.filter(id => id !== projectId);\n    }\n\n    // 检查是否订阅了项目\n    isSubscribed(projectId) {\n        return this.subscribedProjects.includes(projectId);\n    }\n\n    // 获取订阅的项目列表\n    getSubscribedProjects() {\n        return this.projects.filter(project => this.subscribedProjects.includes(project.id));\n    }\n}\n\n// 导出 ProjectStore 类\nexport default ProjectStore;"],"mappings":"AAAA;AACA,MAAMA,YAAY,CAAC;EACfC,WAAWA,CAAA,EAAG;IACV;IACA,IAAI,CAACC,QAAQ,GAAG,EAAE;IAClB,IAAI,CAACC,eAAe,GAAG,IAAI;IAC3B,IAAI,CAACC,kBAAkB,GAAG,EAAE;EAChC;;EAEA;EACAC,UAAUA,CAACC,OAAO,EAAE;IAChB,IAAI,CAACJ,QAAQ,CAACK,IAAI,CAACD,OAAO,CAAC;EAC/B;;EAEA;EACAE,WAAWA,CAACN,QAAQ,EAAE;IAClB,IAAI,CAACA,QAAQ,GAAGA,QAAQ;EAC5B;;EAEA;EACAO,cAAcA,CAACC,EAAE,EAAE;IACf,OAAO,IAAI,CAACR,QAAQ,CAACS,IAAI,CAACL,OAAO,IAAIA,OAAO,CAACI,EAAE,KAAKA,EAAE,CAAC;EAC3D;;EAEA;EACAE,cAAcA,CAAA,EAAG;IACb,OAAO,IAAI,CAACV,QAAQ;EACxB;;EAEA;EACAW,iBAAiBA,CAACH,EAAE,EAAEI,WAAW,EAAE;IAC/B,MAAMC,KAAK,GAAG,IAAI,CAACb,QAAQ,CAACc,SAAS,CAACV,OAAO,IAAIA,OAAO,CAACI,EAAE,KAAKA,EAAE,CAAC;IACnE,IAAIK,KAAK,KAAK,CAAC,CAAC,EAAE;MACd,IAAI,CAACb,QAAQ,CAACa,KAAK,CAAC,GAAG;QAAE,GAAG,IAAI,CAACb,QAAQ,CAACa,KAAK,CAAC;QAAE,GAAGD;MAAY,CAAC;MAClE,OAAO,IAAI;IACf;IACA,OAAO,KAAK;EAChB;;EAEA;EACAG,iBAAiBA,CAACP,EAAE,EAAE;IAClB,IAAI,CAACR,QAAQ,GAAG,IAAI,CAACA,QAAQ,CAACgB,MAAM,CAACZ,OAAO,IAAIA,OAAO,CAACI,EAAE,KAAKA,EAAE,CAAC;IAClE;IACA,IAAI,IAAI,CAACP,eAAe,IAAI,IAAI,CAACA,eAAe,CAACO,EAAE,KAAKA,EAAE,EAAE;MACxD,IAAI,CAACP,eAAe,GAAG,IAAI;IAC/B;IACA;IACA,IAAI,CAACC,kBAAkB,GAAG,IAAI,CAACA,kBAAkB,CAACc,MAAM,CAACR,EAAE,IAAIA,EAAE,KAAKA,EAAE,CAAC;EAC7E;;EAEA;EACAS,kBAAkBA,CAACb,OAAO,EAAE;IACxB,IAAI,CAACH,eAAe,GAAGG,OAAO;EAClC;;EAEA;EACAc,kBAAkBA,CAAA,EAAG;IACjB,OAAO,IAAI,CAACjB,eAAe;EAC/B;;EAEA;EACAkB,gBAAgBA,CAACC,SAAS,EAAE;IACxB,IAAI,CAAC,IAAI,CAAClB,kBAAkB,CAACmB,QAAQ,CAACD,SAAS,CAAC,EAAE;MAC9C,IAAI,CAAClB,kBAAkB,CAACG,IAAI,CAACe,SAAS,CAAC;IAC3C;EACJ;;EAEA;EACAE,kBAAkBA,CAACF,SAAS,EAAE;IAC1B,IAAI,CAAClB,kBAAkB,GAAG,IAAI,CAACA,kBAAkB,CAACc,MAAM,CAACR,EAAE,IAAIA,EAAE,KAAKY,SAAS,CAAC;EACpF;;EAEA;EACAG,YAAYA,CAACH,SAAS,EAAE;IACpB,OAAO,IAAI,CAAClB,kBAAkB,CAACmB,QAAQ,CAACD,SAAS,CAAC;EACtD;;EAEA;EACAI,qBAAqBA,CAAA,EAAG;IACpB,OAAO,IAAI,CAACxB,QAAQ,CAACgB,MAAM,CAACZ,OAAO,IAAI,IAAI,CAACF,kBAAkB,CAACmB,QAAQ,CAACjB,OAAO,CAACI,EAAE,CAAC,CAAC;EACxF;AACJ;;AAEA;AACA,eAAeV,YAAY","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}