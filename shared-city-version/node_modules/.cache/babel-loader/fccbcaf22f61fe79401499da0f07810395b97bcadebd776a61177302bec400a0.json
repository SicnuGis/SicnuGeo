{"ast":null,"code":"import { ref, onMounted, computed } from 'vue';\nimport { useRouter } from 'vue-router';\nimport { useStore } from 'vuex';\nimport { useProjectService } from '@/services/project.service';\n\n// 状态\n\nexport default {\n  __name: 'Home',\n  setup(__props) {\n    const projects = ref([]);\n\n    // 路由、store和服务\n    const router = useRouter();\n    const store = useStore();\n    const projectService = useProjectService();\n\n    // 计算属性 - 获取最近项目\n    const recentProjects = computed(() => {\n      const allProjects = store.getters.getAllProjects();\n      // 按创建时间降序排序，取前3个\n      return [...allProjects].sort((a, b) => {\n        return new Date(b.createdAt || b.startDate) - new Date(a.createdAt || a.startDate);\n      }).slice(0, 3);\n    });\n\n    // 生命周期\n    onMounted(async () => {\n      await loadProjects();\n    });\n\n    // 加载项目列表\n    const loadProjects = async () => {\n      try {\n        const data = await projectService.getAllProjects();\n        projects.value = data;\n        // 更新Vuex store\n        store.dispatch('setProjects', data);\n      } catch (error) {\n        console.error('加载项目列表失败:', error);\n      }\n    };\n\n    // 跳转到项目管理\n    const goToProjectAdmin = () => {\n      router.push('/projects');\n    };\n\n    // 查看项目详情\n    const viewProject = id => {\n      router.push({\n        name: 'ProjectDetail',\n        params: {\n          id\n        }\n      });\n    };\n\n    // 格式化日期\n    const formatDate = dateString => {\n      if (!dateString) return '暂无';\n      const date = new Date(dateString);\n      return `${date.getFullYear()}-${(date.getMonth() + 1).toString().padStart(2, '0')}-${date.getDate().toString().padStart(2, '0')}`;\n    };\n\n    // 获取状态文本\n    const getStatusText = status => {\n      const statusMap = {\n        notStarted: '未开始',\n        inProgress: '进行中',\n        completed: '已完成',\n        delayed: '已延期'\n      };\n      return statusMap[status] || '未知状态';\n    };\n    return {\n      __sfc: true,\n      projects,\n      router,\n      store,\n      projectService,\n      recentProjects,\n      loadProjects,\n      goToProjectAdmin,\n      viewProject,\n      formatDate,\n      getStatusText\n    };\n  }\n};","map":{"version":3,"names":["ref","onMounted","computed","useRouter","useStore","useProjectService","projects","router","store","projectService","recentProjects","allProjects","getters","getAllProjects","sort","a","b","Date","createdAt","startDate","slice","loadProjects","data","value","dispatch","error","console","goToProjectAdmin","push","viewProject","id","name","params","formatDate","dateString","date","getFullYear","getMonth","toString","padStart","getDate","getStatusText","status","statusMap","notStarted","inProgress","completed","delayed"],"sources":["Home.vue"],"sourcesContent":["<template>\n  <div class=\"home-container\">\n    <div class=\"hero\">\n      <h1>共享城市版本应用</h1>\n      <p>智能城市项目管理与可视化平台</p>\n      <button class=\"btn-primary\" @click=\"goToProjectAdmin\">进入项目管理</button>\n    </div>\n\n    <div class=\"features\">\n      <div class=\"feature-item\">\n        <div class=\"feature-icon\">📊</div>\n        <h3>项目甘特图</h3>\n        <p>直观展示项目进度和时间线，帮助您更好地管理项目</p>\n      </div>\n      <div class=\"feature-item\">\n        <div class=\"feature-icon\">🗺️</div>\n        <h3>GIS可视化</h3>\n        <p>结合Cesium实现地理信息可视化，直观展示城市项目分布</p>\n      </div>\n      <div class=\"feature-item\">\n        <div class=\"feature-icon\">🔔</div>\n        <h3>项目订阅</h3>\n        <p>订阅您关注的项目，及时获取项目最新进展和变更通知</p>\n      </div>\n    </div>\n\n    <div class=\"recent-projects\" v-if=\"projects.length > 0\">\n      <h2>最近项目</h2>\n      <el-carousel :interval=\"5000\" arrow=\"always\">\n        <el-carousel-item v-for=\"project in projects\" :key=\"project.id\">\n          <div class=\"project-card\">\n            <h3>{{ project.name }}</h3>\n            <p>{{ project.description }}</p>\n            <div class=\"project-meta\">\n              <span>开始日期: {{ formatDate(project.startDate) }}</span>\n              <span>结束日期: {{ formatDate(project.endDate) }}</span>\n              <span :class=\"{ 'status-delayed': project.status === 'delayed' }\">\n                {{ getStatusText(project.status) }}\n              </span>\n            </div>\n            <button @click=\"viewProject(project.id)\">查看详情</button>\n          </div>\n        </el-carousel-item>\n      </el-carousel>\n    </div>\n  </div>\n</template>\n\n<script setup>\nimport { ref, onMounted, computed } from 'vue'\nimport { useRouter } from 'vue-router'\nimport { useStore } from 'vuex'\nimport { useProjectService } from '@/services/project.service'\n\n// 状态\nconst projects = ref([])\n\n// 路由、store和服务\nconst router = useRouter()\nconst store = useStore()\nconst projectService = useProjectService()\n\n// 计算属性 - 获取最近项目\nconst recentProjects = computed(() => {\n  const allProjects = store.getters.getAllProjects()\n  // 按创建时间降序排序，取前3个\n  return [...allProjects].sort((a, b) => {\n    return new Date(b.createdAt || b.startDate) - new Date(a.createdAt || a.startDate)\n  }).slice(0, 3)\n})\n\n// 生命周期\nonMounted(async () => {\n  await loadProjects()\n})\n\n// 加载项目列表\nconst loadProjects = async () => {\n  try {\n    const data = await projectService.getAllProjects()\n    projects.value = data\n    // 更新Vuex store\n    store.dispatch('setProjects', data)\n  } catch (error) {\n    console.error('加载项目列表失败:', error)\n  }\n}\n\n// 跳转到项目管理\nconst goToProjectAdmin = () => {\n  router.push('/projects')\n}\n\n// 查看项目详情\nconst viewProject = (id) => {\n  router.push({ name: 'ProjectDetail', params: { id } })\n}\n\n// 格式化日期\nconst formatDate = (dateString) => {\n  if (!dateString) return '暂无'\n  const date = new Date(dateString)\n  return `${date.getFullYear()}-${(date.getMonth() + 1).toString().padStart(2, '0')}-${date.getDate().toString().padStart(2, '0')}`\n}\n\n// 获取状态文本\nconst getStatusText = (status) => {\n  const statusMap = {\n    notStarted: '未开始',\n    inProgress: '进行中',\n    completed: '已完成',\n    delayed: '已延期'\n  }\n  return statusMap[status] || '未知状态'\n}\n</script>\n\n<style scoped>\n.home-container {\n  padding: 0 20px;\n}\n\n.hero {\n  text-align: center;\n  padding: 60px 20px;\n  background-color: #f0f7ff;\n  border-radius: 8px;\n  margin-bottom: 40px;\n}\n\n.hero h1 {\n  font-size: 2.5rem;\n  margin-bottom: 10px;\n  color: #333;\n}\n\n.hero p {\n  font-size: 1.2rem;\n  color: #666;\n  margin-bottom: 30px;\n}\n\n.btn-primary {\n  padding: 12px 24px;\n  background-color: #4096ff;\n  color: white;\n  border: none;\n  border-radius: 4px;\n  font-size: 1rem;\n  cursor: pointer;\n  transition: background-color 0.3s;\n}\n\n.btn-primary:hover {\n  background-color: #3182ce;\n}\n\n.features {\n  display: flex;\n  justify-content: space-between;\n  margin-bottom: 40px;\n}\n\n.feature-item {\n  flex: 1;\n  text-align: center;\n  padding: 20px;\n  margin: 0 10px;\n  background-color: white;\n  border-radius: 8px;\n  box-shadow: 0 2px 12px 0 rgba(0, 0, 0, 0.1);\n}\n\n.feature-icon {\n  font-size: 2.5rem;\n  margin-bottom: 15px;\n}\n\n.feature-item h3 {\n  font-size: 1.2rem;\n  margin-bottom: 10px;\n}\n\n.feature-item p {\n  color: #666;\n}\n\n.recent-projects {\n  margin-bottom: 40px;\n}\n\n.recent-projects h2 {\n  margin-bottom: 20px;\n  color: #333;\n}\n\n.project-card {\n  padding: 20px;\n  background-color: white;\n  border-radius: 8px;\n  box-shadow: 0 2px 12px 0 rgba(0, 0, 0, 0.1);\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n}\n\n.project-card h3 {\n  margin-bottom: 10px;\n  color: #333;\n}\n\n.project-card p {\n  color: #666;\n  margin-bottom: 20px;\n  flex: 1;\n}\n\n.project-meta {\n  display: flex;\n  flex-direction: column;\n  gap: 5px;\n  margin-bottom: 20px;\n  font-size: 0.9rem;\n}\n\n.status-delayed {\n  color: #ff4d4f;\n}\n\n.project-card button {\n  padding: 8px 16px;\n  background-color: #4096ff;\n  color: white;\n  border: none;\n  border-radius: 4px;\n  cursor: pointer;\n  align-self: flex-start;\n}\n\n@media (max-width: 768px) {\n  .features {\n    flex-direction: column;\n  }\n\n  .feature-item {\n    margin: 10px 0;\n  }\n}\n</style>"],"mappings":"AAiDA,SAASA,GAAG,EAAEC,SAAS,EAAEC,QAAQ,QAAQ,KAAK;AAC9C,SAASC,SAAS,QAAQ,YAAY;AACtC,SAASC,QAAQ,QAAQ,MAAM;AAC/B,SAASC,iBAAiB,QAAQ,4BAA4B;;AAE9D;;;;;IACA,MAAMC,QAAQ,GAAGN,GAAG,CAAC,EAAE,CAAC;;IAExB;IACA,MAAMO,MAAM,GAAGJ,SAAS,CAAC,CAAC;IAC1B,MAAMK,KAAK,GAAGJ,QAAQ,CAAC,CAAC;IACxB,MAAMK,cAAc,GAAGJ,iBAAiB,CAAC,CAAC;;IAE1C;IACA,MAAMK,cAAc,GAAGR,QAAQ,CAAC,MAAM;MACpC,MAAMS,WAAW,GAAGH,KAAK,CAACI,OAAO,CAACC,cAAc,CAAC,CAAC;MAClD;MACA,OAAO,CAAC,GAAGF,WAAW,CAAC,CAACG,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAK;QACrC,OAAO,IAAIC,IAAI,CAACD,CAAC,CAACE,SAAS,IAAIF,CAAC,CAACG,SAAS,CAAC,GAAG,IAAIF,IAAI,CAACF,CAAC,CAACG,SAAS,IAAIH,CAAC,CAACI,SAAS,CAAC;MACpF,CAAC,CAAC,CAACC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC;IAChB,CAAC,CAAC;;IAEF;IACAnB,SAAS,CAAC,YAAY;MACpB,MAAMoB,YAAY,CAAC,CAAC;IACtB,CAAC,CAAC;;IAEF;IACA,MAAMA,YAAY,GAAG,MAAAA,CAAA,KAAY;MAC/B,IAAI;QACF,MAAMC,IAAI,GAAG,MAAMb,cAAc,CAACI,cAAc,CAAC,CAAC;QAClDP,QAAQ,CAACiB,KAAK,GAAGD,IAAI;QACrB;QACAd,KAAK,CAACgB,QAAQ,CAAC,aAAa,EAAEF,IAAI,CAAC;MACrC,CAAC,CAAC,OAAOG,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,WAAW,EAAEA,KAAK,CAAC;MACnC;IACF,CAAC;;IAED;IACA,MAAME,gBAAgB,GAAGA,CAAA,KAAM;MAC7BpB,MAAM,CAACqB,IAAI,CAAC,WAAW,CAAC;IAC1B,CAAC;;IAED;IACA,MAAMC,WAAW,GAAIC,EAAE,IAAK;MAC1BvB,MAAM,CAACqB,IAAI,CAAC;QAAEG,IAAI,EAAE,eAAe;QAAEC,MAAM,EAAE;UAAEF;QAAG;MAAE,CAAC,CAAC;IACxD,CAAC;;IAED;IACA,MAAMG,UAAU,GAAIC,UAAU,IAAK;MACjC,IAAI,CAACA,UAAU,EAAE,OAAO,IAAI;MAC5B,MAAMC,IAAI,GAAG,IAAIlB,IAAI,CAACiB,UAAU,CAAC;MACjC,OAAO,GAAGC,IAAI,CAACC,WAAW,CAAC,CAAC,IAAI,CAACD,IAAI,CAACE,QAAQ,CAAC,CAAC,GAAG,CAAC,EAAEC,QAAQ,CAAC,CAAC,CAACC,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC,IAAIJ,IAAI,CAACK,OAAO,CAAC,CAAC,CAACF,QAAQ,CAAC,CAAC,CAACC,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE;IACnI,CAAC;;IAED;IACA,MAAME,aAAa,GAAIC,MAAM,IAAK;MAChC,MAAMC,SAAS,GAAG;QAChBC,UAAU,EAAE,KAAK;QACjBC,UAAU,EAAE,KAAK;QACjBC,SAAS,EAAE,KAAK;QAChBC,OAAO,EAAE;MACX,CAAC;MACD,OAAOJ,SAAS,CAACD,MAAM,CAAC,IAAI,MAAM;IACpC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}